/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedProgressImport } from './routes/_authenticated/progress'
import { Route as AuthenticatedProfileImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedHistoryImport } from './routes/_authenticated/history'
import { Route as AuthenticatedDiaryImport } from './routes/_authenticated/diary'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/dashboard'
import { Route as authSignupImport } from './routes/(auth)/signup'
import { Route as authLoginImport } from './routes/(auth)/login'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedProgressRoute = AuthenticatedProgressImport.update({
  id: '/_authenticated/progress',
  path: '/progress',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedProfileRoute = AuthenticatedProfileImport.update({
  id: '/_authenticated/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedHistoryRoute = AuthenticatedHistoryImport.update({
  id: '/_authenticated/history',
  path: '/history',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedDiaryRoute = AuthenticatedDiaryImport.update({
  id: '/_authenticated/diary',
  path: '/diary',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  id: '/_authenticated/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const authSignupRoute = authSignupImport.update({
  id: '/(auth)/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/diary': {
      id: '/_authenticated/diary'
      path: '/diary'
      fullPath: '/diary'
      preLoaderRoute: typeof AuthenticatedDiaryImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/history': {
      id: '/_authenticated/history'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof AuthenticatedHistoryImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/progress': {
      id: '/_authenticated/progress'
      path: '/progress'
      fullPath: '/progress'
      preLoaderRoute: typeof AuthenticatedProgressImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/diary': typeof AuthenticatedDiaryRoute
  '/history': typeof AuthenticatedHistoryRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/progress': typeof AuthenticatedProgressRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/diary': typeof AuthenticatedDiaryRoute
  '/history': typeof AuthenticatedHistoryRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/progress': typeof AuthenticatedProgressRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/signup': typeof authSignupRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/diary': typeof AuthenticatedDiaryRoute
  '/_authenticated/history': typeof AuthenticatedHistoryRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/progress': typeof AuthenticatedProgressRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/dashboard'
    | '/diary'
    | '/history'
    | '/profile'
    | '/progress'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/dashboard'
    | '/diary'
    | '/history'
    | '/profile'
    | '/progress'
  id:
    | '__root__'
    | '/'
    | '/(auth)/login'
    | '/(auth)/signup'
    | '/_authenticated/dashboard'
    | '/_authenticated/diary'
    | '/_authenticated/history'
    | '/_authenticated/profile'
    | '/_authenticated/progress'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authLoginRoute: typeof authLoginRoute
  authSignupRoute: typeof authSignupRoute
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedDiaryRoute: typeof AuthenticatedDiaryRoute
  AuthenticatedHistoryRoute: typeof AuthenticatedHistoryRoute
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedProgressRoute: typeof AuthenticatedProgressRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authLoginRoute: authLoginRoute,
  authSignupRoute: authSignupRoute,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedDiaryRoute: AuthenticatedDiaryRoute,
  AuthenticatedHistoryRoute: AuthenticatedHistoryRoute,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedProgressRoute: AuthenticatedProgressRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(auth)/login",
        "/(auth)/signup",
        "/_authenticated/dashboard",
        "/_authenticated/diary",
        "/_authenticated/history",
        "/_authenticated/profile",
        "/_authenticated/progress"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/signup": {
      "filePath": "(auth)/signup.tsx"
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard.tsx"
    },
    "/_authenticated/diary": {
      "filePath": "_authenticated/diary.tsx"
    },
    "/_authenticated/history": {
      "filePath": "_authenticated/history.tsx"
    },
    "/_authenticated/profile": {
      "filePath": "_authenticated/profile.tsx"
    },
    "/_authenticated/progress": {
      "filePath": "_authenticated/progress.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
